print((lambda ls, mergesort, merge: mergesort(ls, mergesort, merge))(eval(input()), lambda ls, ms, m: m(ms(ls[:len(ls)//2], ms, m),ms(ls[len(ls)//2:], ms, m),[],m) if len(ls) != 1 else ls, lambda l,r,n,m: n if l == r == [] else n + l if r == [] else n + r if l == [] else m(l[1:],r,n + [l[0]], m) if l[0] < r[0] else m(l,r[1:],n + [r[0]],m)))
